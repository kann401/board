<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- resource를 써먹으려면 추가를 해주어서 쉽게 접근 가능하다. -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<resources mapping="/include/**" location="/WEB-INF/views/include/" />
	<resources mapping="/images/**" location="/WEB-INF/views/images/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- 스프링 빈을 태그로 등록하지 않고 자동으로 검색(auto scan) --> 
	<context:component-scan base-package="com.example.board" />
	<!-- 파일업로드에 필요한 bean -->
	<beans:bean id="multipartResolver"
	class=
	"org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<!-- 파일업로드 최대 용량(byte) -->
		<beans:property name="maxUploadSize" value="10485760" />
	</beans:bean>
	<!-- 파일업로드를 위한 디렉토리 설정 -->
	<!-- String uploadPath=new String("d:/upload"); -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="c:/upload"/>
	</beans:bean>
	
<!--  	<aop:aspectj-autoproxy /> ##에러가 나서 일단 주석처리## -->
	
	<!-- 인터셉터 선언 bean으로 만들어 놓기 -->
	<beans:bean id="sampleInterceptor" 
		class="com.example.board.interceptor.SampleInterceptor" />
	<beans:bean id="loginInterceptor" 
		class="com.example.board.interceptor.LoginInterceptor" />
	<beans:bean id="adminInterceptor" 
		class="com.example.board.interceptor.AdminInterceptor" />
		
	<!-- 인터셉터와 url 매핑 -->
	<interceptors>
		<interceptor>
		<!-- 로그인 없이 바로 url창에 해당주소를 입력하여 접근을 시도하였을 때 인터셉터
			prehandler 발동 -->
			<mapping path="/board/write.do"/>
			<mapping path="/board/insert.do"/>
			<beans:ref bean="loginInterceptor" />
		</interceptor>
		<!-- 로그인 없이 바로 url창에 해당주소를 입력하여 접근을 시도하였을 때 인터셉터
			prehandler 발동 -->
		
	</interceptors>
	

</beans:beans>
